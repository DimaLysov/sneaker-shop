version: '3.8'

networks:
  app-network:
    driver: bridge

services:
  db:
    image: postgres:13
    env_file: ./back/env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - app-network

  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
    command: sh -c "python manage.py migrate && gunicorn --bind 0.0.0.0:8000 backend.wsgi:application"
    env_file:
      - ./back/.env
    expose:
      - "8000"
    restart: always
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build:
      context: ./front
      args:
        - REACT_APP_API_URL=${REACT_APP_API_URL}
        - REACT_APP_BASE_NAME=${REACT_APP_BASE_NAME}
    env_file:
      - ./front/.env
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: always
    networks:
      - app-network
    
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/build:/usr/share/nginx/html
      - ./ssl:/etc/ssl/certs
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

volumes:
  postgres_data:
  node_modules: